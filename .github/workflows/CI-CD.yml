name: CI/CD_Pipeline

on:
  push:
    branches: [ main, release, development] # Branches that trigger the pipeline when a push occurs
  pull_request:
    branches: [ main, release, development] # Branches that trigger the pipeline when a pull request occurs

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "Validating commit messages..."
          REGEX="^((Merge.*)|(Revert.*)|((build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\(.*\))?!: .*))"
          COMMIT_MSGS=$(git log --format=%B -n 1 HEAD)
          echo "$COMMIT_MSGS" | while read -r COMMIT_MSG; do
            if ! echo "$COMMIT_MSG" | grep -Eq "$REGEX"; then
              echo "Commit message does not follow the convention: $COMMIT_MSG"
              exit 1
            fi
          done

  build:
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          maven-version: '4.0.0'

      - name: Run Maven
        run: mvn test
        working-directory: ./A3_

      - name: Run Maven
        run: mvn test jacoco:report
        working-directory: ./A3_

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14, 16 ]
        test: [ unit, integration ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm run test:${{ matrix.test }}

  versions:
    if: github.ref == 'refs/heads/release' # This job is run if the GitHub reference is 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up shell script permissions
        run: chmod +x ./A3_/generate_version.sh # Executes the command to set up the shell script permissions
      - name: Generate version
        run: ./A3_/generate_version.sh true # Executes the script to generate the version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
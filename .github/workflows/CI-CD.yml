name: CI/CD_Pipeline

on:
  push:
    branches: [ main, release, development] # Branches that trigger the pipeline when a push occurs
  pull_request:
    branches: [ main, release, development] # Branches that trigger the pipeline when a pull request occurs

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "Validando mensagens de commit..."
          
            REGEX="^((Merge.)|(Revert.)|((build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\(.\))?!?: .))"
          
            BASE_TAG=your-base-tag
            if git rev-parse $BASE_TAG >/dev/null 2>&1; then
                COMMIT_RANGE=$BASE_TAG..HEAD
            else
                COMMIT_RANGE=$(git rev-list --max-parents=0 HEAD)
            fi
          
            for COMMIT_HASH in $(git rev-list --no-merges $COMMIT_RANGE); do
                MESSAGE=$(git log --format=%B -n 1 $COMMIT_HASH)
                echo "Commit Message: ${MESSAGE}"
                if ! [[ "$MESSAGE" =~ $REGEX ]]; then
                    echo >&2 "ERROR: Commit aborted for not following the Conventional Commit standard."
                    exit 1
                else
                    echo "Valid commit message."
                fi
           done

  build:
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          maven-version: '4.0.0'

      - name: Run Maven
        run: mvn test

      - name: Run Maven
        run: mvn test jacoco:report

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: mvn test

  versions:
    if: github.ref == 'refs/heads/release' # This job is run if the GitHub reference is 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up shell script permissions
        run: chmod +x ./A3_/generate_version.sh # Executes the command to set up the shell script permissions
      - name: Generate version
        run: ./A3_/generate_version.sh true # Executes the script to generate the version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}